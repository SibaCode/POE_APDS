{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/PaymentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentPage() {\n  _s();\n  const [paymentData, setPaymentData] = useState({\n    amount: '',\n    currency: '',\n    provider: '',\n    status: '',\n    date: '',\n    customerId: ''\n  });\n  const [message, setMessage] = useState('');\n  const handleChange = e => {\n    setPaymentData({\n      ...paymentData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      amount: parseFloat(paymentData.amount),\n      currency: paymentData.currency,\n      provider: paymentData.provider,\n      status: paymentData.status,\n      date: new Date(paymentData.date).toISOString(),\n      customerId: parseInt(paymentData.customerId)\n    };\n    try {\n      const response = await fetch('https://localhost:7150/api/payments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (response.ok) {\n        setMessage('Payment added successfully!');\n        setPaymentData({\n          amount: '',\n          currency: '',\n          provider: '',\n          status: '',\n          date: '',\n          customerId: ''\n        });\n      } else {\n        const errorData = await response.json();\n        setMessage(`Error: ${errorData.message || 'Failed to add payment'}`);\n      }\n    } catch (error) {\n      setMessage('Error: Could not connect to the server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        value: paymentData.amount,\n        onChange: handleChange,\n        placeholder: \"Amount\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"currency\",\n        value: paymentData.currency,\n        onChange: handleChange,\n        placeholder: \"Currency\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"provider\",\n        value: paymentData.provider,\n        onChange: handleChange,\n        placeholder: \"Provider\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"status\",\n        value: paymentData.status,\n        onChange: handleChange,\n        placeholder: \"Status\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        name: \"date\",\n        value: paymentData.date,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"customerId\",\n        value: paymentData.customerId,\n        onChange: handleChange,\n        placeholder: \"Customer ID\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentPage, \"ADS4LQB2rAOX0oUpbwbbNtrzsZA=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PaymentPage","_s","paymentData","setPaymentData","amount","currency","provider","status","date","customerId","message","setMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","payload","parseFloat","Date","toISOString","parseInt","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/PaymentsPage.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction PaymentPage() {\n  const [paymentData, setPaymentData] = useState({\n    amount: '',\n    currency: '',\n    provider: '',\n    status: '',\n    date: '',\n    customerId: ''\n  });\n\n  const [message, setMessage] = useState('');\n\n  const handleChange = (e) => {\n    setPaymentData({\n      ...paymentData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const payload = {\n      amount: parseFloat(paymentData.amount),\n      currency: paymentData.currency,\n      provider: paymentData.provider,\n      status: paymentData.status,\n      date: new Date(paymentData.date).toISOString(),\n      customerId: parseInt(paymentData.customerId)\n    };\n\n    try {\n      const response = await fetch('https://localhost:7150/api/payments', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n\n      if (response.ok) {\n        setMessage('Payment added successfully!');\n        setPaymentData({\n          amount: '',\n          currency: '',\n          provider: '',\n          status: '',\n          date: '',\n          customerId: ''\n        });\n      } else {\n        const errorData = await response.json();\n        setMessage(`Error: ${errorData.message || 'Failed to add payment'}`);\n      }\n    } catch (error) {\n      setMessage('Error: Could not connect to the server');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Add Payment</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"number\" name=\"amount\" value={paymentData.amount} onChange={handleChange} placeholder=\"Amount\" required />\n        <input type=\"text\" name=\"currency\" value={paymentData.currency} onChange={handleChange} placeholder=\"Currency\" required />\n        <input type=\"text\" name=\"provider\" value={paymentData.provider} onChange={handleChange} placeholder=\"Provider\" required />\n        <input type=\"text\" name=\"status\" value={paymentData.status} onChange={handleChange} placeholder=\"Status\" required />\n        <input type=\"datetime-local\" name=\"date\" value={paymentData.date} onChange={handleChange} required />\n        <input type=\"number\" name=\"customerId\" value={paymentData.customerId} onChange={handleChange} placeholder=\"Customer ID\" required />\n        <button type=\"submit\">Submit Payment</button>\n      </form>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default PaymentPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}