{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Create a Context for Authentication\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null; // Initialize state from localStorage if available\n  });\n  const navigate = useNavigate(); // We'll use navigate for redirection inside the login function\n\n  // Effect hook to save user data to localStorage whenever it changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n  const login = async (credentials, userType = 'customer') => {\n    const endpoint = userType === 'employee' ? 'https://localhost:7150/api/Employee/login' : 'https://localhost:7150/api/Customers/login';\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(credentials)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Login failed');\n    }\n    const data = await response.json();\n    localStorage.setItem('token', data.token); // Store token\n\n    let loggedInUser;\n    if (userType === 'employee') {\n      loggedInUser = {\n        id: data.employee.id,\n        username: data.employee.username,\n        role: 'employee'\n      };\n    } else {\n      loggedInUser = {\n        fullName: data.customer.fullName,\n        accountNumber: data.customer.accountNumber,\n        id: data.customer.id,\n        role: 'customer'\n      };\n    }\n    setUser(loggedInUser); // Save user globally\n\n    // Redirect based on role after login\n    if (loggedInUser.role === 'customer') {\n      navigate('/dashboard');\n    } else if (loggedInUser.role === 'employee') {\n      navigate('/employee-dashboard');\n    }\n    return loggedInUser; // return the logged-in user for use\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to access the AuthContext\n_s(AuthProvider, \"7+vndrXVs+r0UPfwJdkixkY73IM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useNavigate","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","navigate","setItem","stringify","removeItem","login","credentials","userType","endpoint","response","fetch","method","headers","body","ok","errorData","json","Error","message","data","token","loggedInUser","id","employee","username","role","fullName","customer","accountNumber","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\n// Create a Context for Authentication\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(() => {\n    const storedUser = localStorage.getItem('user');\n    return storedUser ? JSON.parse(storedUser) : null; // Initialize state from localStorage if available\n  });\n\n  const navigate = useNavigate(); // We'll use navigate for redirection inside the login function\n\n  // Effect hook to save user data to localStorage whenever it changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n\n  const login = async (credentials, userType = 'customer') => {\n    const endpoint =\n      userType === 'employee'\n        ? 'https://localhost:7150/api/Employee/login'\n        : 'https://localhost:7150/api/Customers/login';\n\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(credentials),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || 'Login failed');\n    }\n\n    const data = await response.json();\n    localStorage.setItem('token', data.token); // Store token\n\n    let loggedInUser;\n\n    if (userType === 'employee') {\n      loggedInUser = {\n        id: data.employee.id,\n        username: data.employee.username,\n        role: 'employee',\n      };\n    } else {\n      loggedInUser = {\n        fullName: data.customer.fullName,\n        accountNumber: data.customer.accountNumber,\n        id: data.customer.id,\n        role: 'customer',\n      };\n    }\n\n    setUser(loggedInUser); // Save user globally\n\n    // Redirect based on role after login\n    if (loggedInUser.role === 'customer') {\n      navigate('/dashboard');\n    } else if (loggedInUser.role === 'employee') {\n      navigate('/employee-dashboard');\n    }\n\n    return loggedInUser; // return the logged-in user for use\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout }}>\n      {children} {/* Render the child components */}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to access the AuthContext\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM;IACrC,MAAMY,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,OAAOF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,GAAG,IAAI,CAAC,CAAC;EACrD,CAAC,CAAC;EAEF,MAAMK,QAAQ,GAAGd,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,EAAE;MACRG,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEH,IAAI,CAACI,SAAS,CAACT,IAAI,CAAC,CAAC;IACpD,CAAC,MAAM;MACLG,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IACjC;EACF,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEV,MAAMW,KAAK,GAAG,MAAAA,CAAOC,WAAW,EAAEC,QAAQ,GAAG,UAAU,KAAK;IAC1D,MAAMC,QAAQ,GACZD,QAAQ,KAAK,UAAU,GACnB,2CAA2C,GAC3C,4CAA4C;IAElD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,EAAE;MACrCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEd,IAAI,CAACI,SAAS,CAACG,WAAW;IAClC,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAMC,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,cAAc,CAAC;IACtD;IAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClCnB,YAAY,CAACK,OAAO,CAAC,OAAO,EAAEiB,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;;IAE3C,IAAIC,YAAY;IAEhB,IAAId,QAAQ,KAAK,UAAU,EAAE;MAC3Bc,YAAY,GAAG;QACbC,EAAE,EAAEH,IAAI,CAACI,QAAQ,CAACD,EAAE;QACpBE,QAAQ,EAAEL,IAAI,CAACI,QAAQ,CAACC,QAAQ;QAChCC,IAAI,EAAE;MACR,CAAC;IACH,CAAC,MAAM;MACLJ,YAAY,GAAG;QACbK,QAAQ,EAAEP,IAAI,CAACQ,QAAQ,CAACD,QAAQ;QAChCE,aAAa,EAAET,IAAI,CAACQ,QAAQ,CAACC,aAAa;QAC1CN,EAAE,EAAEH,IAAI,CAACQ,QAAQ,CAACL,EAAE;QACpBG,IAAI,EAAE;MACR,CAAC;IACH;IAEA9B,OAAO,CAAC0B,YAAY,CAAC,CAAC,CAAC;;IAEvB;IACA,IAAIA,YAAY,CAACI,IAAI,KAAK,UAAU,EAAE;MACpCxB,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,MAAM,IAAIoB,YAAY,CAACI,IAAI,KAAK,UAAU,EAAE;MAC3CxB,QAAQ,CAAC,qBAAqB,CAAC;IACjC;IAEA,OAAOoB,YAAY,CAAC,CAAC;EACvB,CAAC;EAED,MAAMQ,MAAM,GAAGA,CAAA,KAAM;IACnBlC,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BP,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACwC,QAAQ;IAACC,KAAK,EAAE;MAAErC,IAAI;MAAEW,KAAK;MAAEwB;IAAO,CAAE;IAAArC,QAAA,GAClDA,QAAQ,EAAC,GAAC;EAAA;IAAAwC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE3B,CAAC;;AAED;AAAA1C,EAAA,CA/EaF,YAAY;EAAA,QAMNJ,WAAW;AAAA;AAAAiD,EAAA,GANjB7C,YAAY;AAgFzB,OAAO,MAAM8C,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMrD,UAAU,CAACK,WAAW,CAAC;AAAA;AAACgD,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}