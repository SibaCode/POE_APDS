{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/employee/EmployeeDashboardPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './../employee/css/EmployeeDashboardPage.css'; // Add custom styles\n\nimport './EmployeeDashboardPage.css'; // Add custom styles for Employee dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeDashboardPage() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState('');\n\n  // Fetch pending transactions for employee verification\n  useEffect(() => {\n    fetch('http://localhost:5000/api/employee/transactions', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => response.json()).then(data => setTransactions(data)).catch(err => {\n      console.error(err);\n      setError('Failed to load transactions');\n    });\n  }, []);\n\n  // Handle transaction verification (mark as verified)\n  const handleVerify = async transactionId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/employee/verify/${transactionId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTransactions(prevTransactions => prevTransactions.map(tx => tx.id === transactionId ? {\n          ...tx,\n          status: 'verified'\n        } : tx));\n      } else {\n        const error = await response.json();\n        setError(error.message || 'Verification failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('An error occurred while verifying the transaction.');\n    }\n  };\n\n  // Handle flagging transaction as suspicious\n  const handleFlag = async transactionId => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/employee/flag/${transactionId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setTransactions(prevTransactions => prevTransactions.map(tx => tx.id === transactionId ? {\n          ...tx,\n          status: 'flagged'\n        } : tx));\n      } else {\n        const error = await response.json();\n        setError(error.message || 'Flagging failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('An error occurred while flagging the transaction.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pending Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Provider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"No pending transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this) : transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.provider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: transaction.status === 'verified' || transaction.status === 'flagged',\n              onClick: () => handleVerify(transaction.id),\n              children: \"Verify\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: transaction.status === 'verified' || transaction.status === 'flagged',\n              onClick: () => handleFlag(transaction.id),\n              children: \"Flag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeDashboardPage, \"fPYxFprw5KueN1ejmbpJ2rUwIx0=\");\n_c = EmployeeDashboardPage;\nexport default EmployeeDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboardPage\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","EmployeeDashboardPage","_s","transactions","setTransactions","useState","error","setError","useEffect","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","err","console","handleVerify","transactionId","ok","prevTransactions","map","tx","id","status","message","handleFlag","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","colSpan","transaction","amount","currency","provider","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/employee/EmployeeDashboardPage.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './../employee/css/EmployeeDashboardPage.css'; // Add custom styles\n\nimport './EmployeeDashboardPage.css'; // Add custom styles for Employee dashboard\n\nfunction EmployeeDashboardPage() {\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState('');\n\n  // Fetch pending transactions for employee verification\n  useEffect(() => {\n    fetch('http://localhost:5000/api/employee/transactions', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => setTransactions(data))\n      .catch(err => {\n        console.error(err);\n        setError('Failed to load transactions');\n      });\n  }, []);\n\n  // Handle transaction verification (mark as verified)\n  const handleVerify = async (transactionId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/employee/verify/${transactionId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        setTransactions(prevTransactions =>\n          prevTransactions.map(tx =>\n            tx.id === transactionId ? { ...tx, status: 'verified' } : tx\n          )\n        );\n      } else {\n        const error = await response.json();\n        setError(error.message || 'Verification failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('An error occurred while verifying the transaction.');\n    }\n  };\n\n  // Handle flagging transaction as suspicious\n  const handleFlag = async (transactionId) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/employee/flag/${transactionId}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n      });\n\n      if (response.ok) {\n        setTransactions(prevTransactions =>\n          prevTransactions.map(tx =>\n            tx.id === transactionId ? { ...tx, status: 'flagged' } : tx\n          )\n        );\n      } else {\n        const error = await response.json();\n        setError(error.message || 'Flagging failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('An error occurred while flagging the transaction.');\n    }\n  };\n\n  return (\n    <div className=\"employee-dashboard-container\">\n      <h2>Employee Dashboard</h2>\n\n      {/* Error Message */}\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {/* Transaction History */}\n      <h3>Pending Transactions</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Amount</th>\n            <th>Currency</th>\n            <th>Provider</th>\n            <th>Status</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {transactions.length === 0 ? (\n            <tr>\n              <td colSpan=\"5\">No pending transactions</td>\n            </tr>\n          ) : (\n            transactions.map((transaction) => (\n              <tr key={transaction.id}>\n                <td>{transaction.amount}</td>\n                <td>{transaction.currency}</td>\n                <td>{transaction.provider}</td>\n                <td>{transaction.status}</td>\n                <td>\n                  <button\n                    disabled={transaction.status === 'verified' || transaction.status === 'flagged'}\n                    onClick={() => handleVerify(transaction.id)}\n                  >\n                    Verify\n                  </button>\n                  <button\n                    disabled={transaction.status === 'verified' || transaction.status === 'flagged'}\n                    onClick={() => handleFlag(transaction.id)}\n                  >\n                    Flag\n                  </button>\n                </td>\n              </tr>\n            ))\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default EmployeeDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}