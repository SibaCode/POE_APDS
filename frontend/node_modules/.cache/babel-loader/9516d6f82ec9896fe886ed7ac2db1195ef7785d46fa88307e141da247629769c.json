{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/employee/EmployeeDashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './../employee/css/EmployeeDashboard.css'; // Custom styles for your dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeDashboardPage = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch transactions when the component mounts\n    const fetchTransactions = async () => {\n      try {\n        // Make the API request to fetch all transactions\n        const response = await fetch('https://localhost:7150/api/Transactions', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}` // Add token if required\n          }\n        });\n\n        // Check if response is OK\n        if (!response.ok) {\n          throw new Error('Failed to fetch transactions');\n        }\n\n        // Parse the response body as JSON\n        const data = await response.json();\n\n        // Set the transactions in state\n        setTransactions(data);\n      } catch (error) {\n        // Handle errors\n        console.error('Error fetching transactions:', error);\n        setError(error.message || 'Something went wrong');\n      }\n    };\n    fetchTransactions();\n  }, []); // Empty array ensures this runs only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transactions-table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"transactions-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.length > 0 ? transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: new Date(transaction.date).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)]\n          }, transaction.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)) :\n          /*#__PURE__*/\n          // Display a message if there are no transactions\n          _jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: \"No transactions found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeDashboardPage, \"yZk5gdwaUfyVoWK6nw6LeFHn8nw=\");\n_c = EmployeeDashboardPage;\nexport default EmployeeDashboardPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmployeeDashboardPage","_s","transactions","setTransactions","error","setError","fetchTransactions","response","fetch","headers","localStorage","getItem","ok","Error","data","json","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","transaction","id","amount","currency","status","Date","date","toLocaleString","colSpan","_c","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/employee/EmployeeDashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './../employee/css/EmployeeDashboard.css'; // Custom styles for your dashboard\n\nconst EmployeeDashboardPage = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    // Fetch transactions when the component mounts\n    const fetchTransactions = async () => {\n      try {\n        // Make the API request to fetch all transactions\n        const response = await fetch('https://localhost:7150/api/Transactions', {\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${localStorage.getItem('token')}`, // Add token if required\n          },\n        });\n\n        // Check if response is OK\n        if (!response.ok) {\n          throw new Error('Failed to fetch transactions');\n        }\n\n        // Parse the response body as JSON\n        const data = await response.json();\n\n        // Set the transactions in state\n        setTransactions(data);\n      } catch (error) {\n        // Handle errors\n        console.error('Error fetching transactions:', error);\n        setError(error.message || 'Something went wrong');\n      }\n    };\n\n    fetchTransactions();\n  }, []); // Empty array ensures this runs only once when the component mounts\n\n  return (\n    <div className=\"employee-dashboard-container\">\n      <h2>Employee Dashboard</h2>\n\n      {/* Display any error message */}\n      {error && <div className=\"error-message\">{error}</div>}\n\n      {/* Table for displaying transactions */}\n      <div className=\"transactions-table-container\">\n        <table className=\"transactions-table\">\n          <thead>\n            <tr>\n              <th>Transaction ID</th>\n              <th>Amount</th>\n              <th>Currency</th>\n              <th>Status</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            {/* If transactions are available, display them */}\n            {transactions.length > 0 ? (\n              transactions.map((transaction) => (\n                <tr key={transaction.id}>\n                  <td>{transaction.id}</td>\n                  <td>{transaction.amount}</td>\n                  <td>{transaction.currency}</td>\n                  <td>{transaction.status}</td>\n                  <td>{new Date(transaction.date).toLocaleString()}</td>\n                </tr>\n              ))\n            ) : (\n              // Display a message if there are no transactions\n              <tr>\n                <td colSpan=\"5\">No transactions found</td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeDashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}