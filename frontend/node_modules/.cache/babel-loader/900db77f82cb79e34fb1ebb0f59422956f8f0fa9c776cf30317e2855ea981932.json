{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './../customer/css/DashboardPage.css';\nimport Notification from './../../Notification';\nimport Navbar from '../../components/Navbar';\nimport { useAuth } from '../../../src/AuthContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  console.log('User in dashboard:', user);\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({\n    amount: '',\n    currency: '',\n    swiftCode: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTransaction, setEditingTransaction] = useState(null); // To handle editing\n  const accountNumber = user === null || user === void 0 ? void 0 : user.accountNumber;\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await fetch(`https://localhost:7150/api/TransactionDetails`);\n        if (!response.ok) throw new Error('Failed to fetch transactions');\n        const data = await response.json();\n        setTransactions(data);\n      } catch (err) {\n        console.error(err);\n        setError('Could not load transactions.');\n      }\n    };\n    if (user !== null && user !== void 0 && user.id) {\n      fetchTransactions();\n    }\n  }, [user]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      ...newTransaction,\n      accountNumber: user.accountNumber\n    };\n    try {\n      let response;\n      if (editingTransaction) {\n        // Update the existing transaction\n        response = await fetch(`https://localhost:7150/api/TransactionDetails/${editingTransaction.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n      } else {\n        // Create a new transaction\n        response = await fetch('https://localhost:7150/api/TransactionDetails', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n      }\n      if (!response.ok) throw new Error('Transaction failed');\n      const savedTransaction = await response.json();\n      if (editingTransaction) {\n        setTransactions(transactions.map(tx => tx.id === savedTransaction.id ? savedTransaction : tx));\n        setSuccess('Transaction updated successfully');\n      } else {\n        setTransactions([savedTransaction, ...transactions]);\n        setSuccess('Transaction submitted successfully');\n      }\n      setNewTransaction({\n        amount: '',\n        currency: '',\n        swiftCode: ''\n      });\n      setIsModalOpen(false);\n      setEditingTransaction(null);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to submit transaction');\n    }\n  };\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n    setEditingTransaction(null); // Reset editing state when closing modal\n  };\n  const handleEdit = transaction => {\n    setEditingTransaction(transaction);\n    setNewTransaction({\n      amount: transaction.amount,\n      currency: transaction.currency,\n      swiftCode: transaction.swiftCode\n    });\n    setIsModalOpen(true);\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`https://localhost:7150/api/TransactionDetails/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) throw new Error('Failed to delete transaction');\n      setTransactions(transactions.filter(tx => tx.id !== id));\n      setSuccess('Transaction deleted successfully');\n    } catch (err) {\n      console.error(err);\n      setError('Failed to delete transaction');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      userType: \"Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.fullName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(Notification, {\n        message: success,\n        type: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(Notification, {\n        message: error,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleModal,\n        children: \"Add New Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Currency\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Swift Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.amount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.currency\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.swiftCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: transaction.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(transaction),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(transaction.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, transaction.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: editingTransaction ? 'Edit Transaction' : 'Initiate a New Payment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"amount\",\n                value: newTransaction.amount,\n                onChange: handleInputChange,\n                placeholder: \"Enter amount\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Currency\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"currency\",\n                value: newTransaction.currency,\n                onChange: handleInputChange,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"USD\",\n                  children: \"USD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"EUR\",\n                  children: \"EUR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"GBP\",\n                  children: \"GBP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ZAR\",\n                  children: \"ZAR\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"SWIFT Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"swiftCode\",\n                value: newTransaction.swiftCode,\n                onChange: handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: editingTransaction ? 'Update' : 'Pay Now'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DashboardPage, \"MAWpjA94Lk3Ny4zxgz2AVJhuzOY=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Notification","Navbar","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardPage","_s","user","console","log","transactions","setTransactions","newTransaction","setNewTransaction","amount","currency","swiftCode","error","setError","success","setSuccess","isModalOpen","setIsModalOpen","editingTransaction","setEditingTransaction","accountNumber","fetchTransactions","response","fetch","ok","Error","data","json","err","id","handleInputChange","e","name","value","target","prev","handleSubmit","preventDefault","payload","method","headers","body","JSON","stringify","savedTransaction","map","tx","toggleModal","handleEdit","transaction","handleDelete","filter","children","userType","fileName","_jsxFileName","lineNumber","columnNumber","className","fullName","message","type","onClick","status","onSubmit","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './../customer/css/DashboardPage.css';\nimport Notification from './../../Notification';\nimport Navbar from '../../components/Navbar';\nimport { useAuth } from '../../../src/AuthContext';\n\nfunction DashboardPage() {\n  const { user } = useAuth();\n  console.log('User in dashboard:', user);\n\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({\n    amount: '',\n    currency: '',\n    swiftCode: '',\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTransaction, setEditingTransaction] = useState(null);  // To handle editing\n  const accountNumber = user?.accountNumber;\n\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      try {\n        const response = await fetch(`https://localhost:7150/api/TransactionDetails`);\n        if (!response.ok) throw new Error('Failed to fetch transactions');\n        const data = await response.json();\n        setTransactions(data);\n      } catch (err) {\n        console.error(err);\n        setError('Could not load transactions.');\n      }\n    };\n\n    if (user?.id) {\n      fetchTransactions();\n    }\n  }, [user]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const payload = {\n      ...newTransaction,\n      accountNumber: user.accountNumber,\n    };\n\n    try {\n      let response;\n      if (editingTransaction) {\n        // Update the existing transaction\n        response = await fetch(`https://localhost:7150/api/TransactionDetails/${editingTransaction.id}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n      } else {\n        // Create a new transaction\n        response = await fetch('https://localhost:7150/api/TransactionDetails', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(payload),\n        });\n      }\n\n      if (!response.ok) throw new Error('Transaction failed');\n      const savedTransaction = await response.json();\n      if (editingTransaction) {\n        setTransactions(transactions.map(tx => (tx.id === savedTransaction.id ? savedTransaction : tx)));\n        setSuccess('Transaction updated successfully');\n      } else {\n        setTransactions([savedTransaction, ...transactions]);\n        setSuccess('Transaction submitted successfully');\n      }\n\n      setNewTransaction({\n        amount: '',\n        currency: '',\n        swiftCode: '',\n      });\n      setIsModalOpen(false);\n      setEditingTransaction(null);\n    } catch (err) {\n      console.error(err);\n      setError('Failed to submit transaction');\n    }\n  };\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n    setEditingTransaction(null); // Reset editing state when closing modal\n  };\n\n  const handleEdit = (transaction) => {\n    setEditingTransaction(transaction);\n    setNewTransaction({\n      amount: transaction.amount,\n      currency: transaction.currency,\n      swiftCode: transaction.swiftCode,\n    });\n    setIsModalOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`https://localhost:7150/api/TransactionDetails/${id}`, {\n        method: 'DELETE',\n      });\n\n      if (!response.ok) throw new Error('Failed to delete transaction');\n      setTransactions(transactions.filter(tx => tx.id !== id));\n      setSuccess('Transaction deleted successfully');\n    } catch (err) {\n      console.error(err);\n      setError('Failed to delete transaction');\n    }\n  };\n\n  return (\n    <>\n      <Navbar userType=\"Customer\" />\n      <div className=\"dashboard-container\">\n        <h2>Customer Dashboard</h2>\n        <h3>Welcome, {user?.fullName}</h3>\n\n        {success && <Notification message={success} type=\"success\" />}\n        {error && <Notification message={error} type=\"error\" />}\n\n        <h3>Transaction History</h3>\n        <button onClick={toggleModal}>Add New Transaction</button>\n\n        <table>\n          <thead>\n            <tr>\n              <th>Amount</th>\n              <th>Currency</th>\n              <th>Swift Code</th>\n              <th>Status</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {transactions.map(transaction => (\n              <tr key={transaction.id}>\n                <td>{transaction.amount}</td>\n                <td>{transaction.currency}</td>\n                <td>{transaction.swiftCode}</td>\n                <td>{transaction.status}</td>\n                <td>\n                  <button onClick={() => handleEdit(transaction)}>Edit</button>\n                  <button onClick={() => handleDelete(transaction.id)}>Delete</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n\n        {isModalOpen && (\n          <div className=\"modal\">\n            <div className=\"modal-content\">\n              <h3>{editingTransaction ? 'Edit Transaction' : 'Initiate a New Payment'}</h3>\n              <form onSubmit={handleSubmit}>\n                <div>\n                  <label>Amount</label>\n                  <input\n                    type=\"number\"\n                    name=\"amount\"\n                    value={newTransaction.amount}\n                    onChange={handleInputChange}\n                    placeholder=\"Enter amount\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label>Currency</label>\n                  <select\n                    name=\"currency\"\n                    value={newTransaction.currency}\n                    onChange={handleInputChange}\n                    required\n                  >\n                    <option value=\"USD\">USD</option>\n                    <option value=\"EUR\">EUR</option>\n                    <option value=\"GBP\">GBP</option>\n                    <option value=\"ZAR\">ZAR</option>\n                  </select>\n                </div>\n                <div>\n                  <label>SWIFT Code</label>\n                  <input\n                    type=\"text\"\n                    name=\"swiftCode\"\n                    value={newTransaction.swiftCode}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <button type=\"submit\">{editingTransaction ? 'Update' : 'Pay Now'}</button>\n              </form>\n              <button onClick={toggleModal}>Close</button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default DashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}