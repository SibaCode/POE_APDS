{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './../customer/css/DashboardPage.css'; // Add custom styles\nimport Notification from './../../Notification'; // Import the Notification component\nimport Navbar from '../../components/Navbar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({\n    amount: '',\n    currency: '',\n    provider: 'SWIFT',\n    accountNumber: '',\n    swiftCode: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Fetch transaction history (ideally from the backend)\n  useEffect(() => {\n    // Replace with your backend API call to fetch transactions\n    fetch('http://localhost:5000/api/customers/transactions', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(response => response.json()).then(data => setTransactions(data)).catch(err => console.error(err));\n  }, []);\n\n  // Handle input changes for new transaction form\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission for new payment\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/customers/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify(newTransaction)\n      });\n      if (response.ok) {\n        const transaction = await response.json();\n        setTransactions([transaction, ...transactions]);\n        setSuccess('Transaction submitted successfully');\n        setNewTransaction({\n          amount: '',\n          currency: '',\n          provider: 'SWIFT',\n          accountNumber: '',\n          swiftCode: ''\n        });\n      } else {\n        const error = await response.json();\n        setError(error.message || 'Transaction failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Something went wrong.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      userType: \"Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Customer Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), success && /*#__PURE__*/_jsxDEV(Notification, {\n        message: success,\n        type: \"success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this), error && /*#__PURE__*/_jsxDEV(Notification, {\n        message: error,\n        type: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transaction History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Initiate a New Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(DashboardPage, \"JLzpejpc+1jzI2PoGh1w7Jka8IY=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Notification","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardPage","_s","transactions","setTransactions","newTransaction","setNewTransaction","amount","currency","provider","accountNumber","swiftCode","error","setError","success","setSuccess","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","err","console","handleInputChange","e","name","value","target","prev","handleSubmit","preventDefault","body","JSON","stringify","ok","transaction","message","children","userType","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onSubmit","_c","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './../customer/css/DashboardPage.css'; // Add custom styles\nimport Notification from './../../Notification'; // Import the Notification component\nimport Navbar from '../../components/Navbar';\n\nfunction DashboardPage() {\n  const [transactions, setTransactions] = useState([]);\n  const [newTransaction, setNewTransaction] = useState({\n    amount: '',\n    currency: '',\n    provider: 'SWIFT',\n    accountNumber: '',\n    swiftCode: '',\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Fetch transaction history (ideally from the backend)\n  useEffect(() => {\n    // Replace with your backend API call to fetch transactions\n    fetch('http://localhost:5000/api/customers/transactions', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\n      },\n    })\n      .then(response => response.json())\n      .then(data => setTransactions(data))\n      .catch(err => console.error(err));\n  }, []);\n\n  // Handle input changes for new transaction form\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Handle form submission for new payment\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:5000/api/customers/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n        },\n        body: JSON.stringify(newTransaction),\n      });\n\n      if (response.ok) {\n        const transaction = await response.json();\n        setTransactions([transaction, ...transactions]);\n        setSuccess('Transaction submitted successfully');\n        setNewTransaction({\n          amount: '',\n          currency: '',\n          provider: 'SWIFT',\n          accountNumber: '',\n          swiftCode: '',\n        });\n      } else {\n        const error = await response.json();\n        setError(error.message || 'Transaction failed');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Something went wrong.');\n    }\n  };\n\n  return (\n    <>\n    <Navbar userType=\"Customer\" />\n    <div className=\"dashboard-container\">\n      <h2>Customer Dashboard</h2>\n\n      {/* Display Success or Error Notifications */}\n      {success && <Notification message={success} type=\"success\" />}\n      {error && <Notification message={error} type=\"error\" />}\n\n      {/* Transaction History */}\n      <h3>Transaction History</h3>\n      {/* Transaction table here */}\n      \n      {/* New Transaction Form */}\n      <h3>Initiate a New Payment</h3>\n      <form onSubmit={handleSubmit}>\n        {/* Form inputs here */}\n      </form>\n    </div>\n    </>\n  );\n}\n\nexport default DashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}