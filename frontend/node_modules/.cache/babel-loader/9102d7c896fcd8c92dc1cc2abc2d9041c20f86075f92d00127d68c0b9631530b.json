{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/DashboardPage.js\";\n// import React, { useState, useEffect } from 'react';\n// import './../customer/css/DashboardPage.css';\n// import Notification from './../../Notification';\n// import Navbar from '../../components/Navbar';\n// import { useAuth } from '../../../src/AuthContext';\n\n// function DashboardPage() {\n//   const { user } = useAuth();\n//   console.log('User in dashboard:', user);\n\n//   const [transactions, setTransactions] = useState([]);\n//   const [newTransaction, setNewTransaction] = useState({\n//     amount: '',\n//     currency: '',\n//     provider: 'SWIFT',\n//     accountNumber: '',\n//     swiftCode: '',\n//   });\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const accountNumber = user?.accountNumber;\n\n//   useEffect(() => {\n//     const fetchTransactions = async () => {\n//       try {\n//         const response = await fetch(`https://localhost:7150/api/Transactions/customer/${user.accountNumber}`);\n//         if (!response.ok) throw new Error('Failed to fetch transactions');\n//         const data = await response.json();\n//         setTransactions(data);\n//       } catch (err) {\n//         console.error(err);\n//         setError('Could not load transactions.');\n//       }\n//     };\n\n//     if (user?.id) {\n//       fetchTransactions();\n//     }\n//   }, [user]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewTransaction(prev => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const payload = {\n//       ...newTransaction,\n//       accountNumber: user.accountNumber,\n//     };\n\n//     try {\n//       const response = await fetch('https://localhost:7150/api/transactions', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(payload),\n//       });\n\n//       if (!response.ok) throw new Error('Transaction failed');\n//       const savedTransaction = await response.json();\n//       setTransactions([savedTransaction, ...transactions]);\n//       setSuccess('Transaction submitted successfully');\n//       setNewTransaction({\n//         amount: '',\n//         currency: '',\n//         provider: 'SWIFT',\n//         accountNumber: '',  \n//         swiftCode: '',\n//       });\n//       setIsModalOpen(false);\n//     } catch (err) {\n//       console.error(err);\n//       setError('Failed to submit transaction');\n//     }\n//   };\n\n//   const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n//   return (\n//     <>\n//       <Navbar userType=\"Customer\" />\n//       <div className=\"dashboard-container\">\n//         <h2>Customer Dashboard</h2>\n//         <h3>Welcome, {user?.fullName}</h3>\n\n//         {success && <Notification message={success} type=\"success\" />}\n//         {error && <Notification message={error} type=\"error\" />}\n\n//         <h3>Transaction History</h3>\n//         <button onClick={toggleModal}>Add New Transaction</button>\n\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Amount</th>\n//               <th>Currency</th>\n//               <th>Provider</th>\n//               <th>Status</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {transactions.map(transaction => (\n//               <tr key={transaction.id}>\n//                 <td>{transaction.amount}</td>\n//                 <td>{transaction.currency}</td>\n//                 <td>{transaction.provider}</td>\n//                 <td>{transaction.status}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n\n//         {isModalOpen && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content\">\n//       <h3>Initiate a New Payment</h3>\n//       <h4>Welcome, {user?.id}</h4>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Amount</label>\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             value={newTransaction.amount}\n//             onChange={handleInputChange}\n//             placeholder=\"Enter amount\"\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Currency</label>\n//           <select\n//             name=\"currency\"\n//             value={newTransaction.currency}\n//             onChange={handleInputChange}\n//             required\n//           >\n//             <option value=\"USD\">USD</option>\n//             <option value=\"EUR\">EUR</option>\n//             <option value=\"GBP\">GBP</option>\n//             <option value=\"ZAR\">ZAR</option>\n//             {/* Add more currencies as needed */}\n//           </select>\n//         </div>\n//         <div>\n//           <label>Provider</label>\n//           <input\n//             type=\"text\"\n//             name=\"provider\"\n//             value=\"SWIFT\"\n//             readOnly\n//           />\n//         </div>\n//         <div>\n//           <label>SWIFT Code</label>\n//           <input\n//             type=\"text\"\n//             name=\"swiftCode\"\n//             value={newTransaction.swiftCode}\n//             onChange={handleInputChange}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Pay Now</button>\n//       </form>\n//       <button onClick={toggleModal}>Close</button>\n//     </div>\n//   </div>\n// )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default DashboardPage;\n// DashboardPage.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  console.log(\"DashboardPage Loaded\");\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Welcome to the Dashboard!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 10\n  }, this);\n}\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DashboardPage","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/DashboardPage.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './../customer/css/DashboardPage.css';\n// import Notification from './../../Notification';\n// import Navbar from '../../components/Navbar';\n// import { useAuth } from '../../../src/AuthContext';\n\n// function DashboardPage() {\n//   const { user } = useAuth();\n//   console.log('User in dashboard:', user);\n\n//   const [transactions, setTransactions] = useState([]);\n//   const [newTransaction, setNewTransaction] = useState({\n//     amount: '',\n//     currency: '',\n//     provider: 'SWIFT',\n//     accountNumber: '',\n//     swiftCode: '',\n//   });\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const accountNumber = user?.accountNumber;\n\n//   useEffect(() => {\n//     const fetchTransactions = async () => {\n//       try {\n//         const response = await fetch(`https://localhost:7150/api/Transactions/customer/${user.accountNumber}`);\n//         if (!response.ok) throw new Error('Failed to fetch transactions');\n//         const data = await response.json();\n//         setTransactions(data);\n//       } catch (err) {\n//         console.error(err);\n//         setError('Could not load transactions.');\n//       }\n//     };\n\n//     if (user?.id) {\n//       fetchTransactions();\n//     }\n//   }, [user]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewTransaction(prev => ({\n//       ...prev,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const payload = {\n//       ...newTransaction,\n//       accountNumber: user.accountNumber,\n//     };\n\n//     try {\n//       const response = await fetch('https://localhost:7150/api/transactions', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify(payload),\n//       });\n\n//       if (!response.ok) throw new Error('Transaction failed');\n//       const savedTransaction = await response.json();\n//       setTransactions([savedTransaction, ...transactions]);\n//       setSuccess('Transaction submitted successfully');\n//       setNewTransaction({\n//         amount: '',\n//         currency: '',\n//         provider: 'SWIFT',\n//         accountNumber: '',  \n//         swiftCode: '',\n//       });\n//       setIsModalOpen(false);\n//     } catch (err) {\n//       console.error(err);\n//       setError('Failed to submit transaction');\n//     }\n//   };\n\n//   const toggleModal = () => setIsModalOpen(!isModalOpen);\n\n//   return (\n//     <>\n//       <Navbar userType=\"Customer\" />\n//       <div className=\"dashboard-container\">\n//         <h2>Customer Dashboard</h2>\n//         <h3>Welcome, {user?.fullName}</h3>\n\n//         {success && <Notification message={success} type=\"success\" />}\n//         {error && <Notification message={error} type=\"error\" />}\n\n//         <h3>Transaction History</h3>\n//         <button onClick={toggleModal}>Add New Transaction</button>\n\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Amount</th>\n//               <th>Currency</th>\n//               <th>Provider</th>\n//               <th>Status</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {transactions.map(transaction => (\n//               <tr key={transaction.id}>\n//                 <td>{transaction.amount}</td>\n//                 <td>{transaction.currency}</td>\n//                 <td>{transaction.provider}</td>\n//                 <td>{transaction.status}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n\n//         {isModalOpen && (\n//   <div className=\"modal\">\n//     <div className=\"modal-content\">\n//       <h3>Initiate a New Payment</h3>\n//       <h4>Welcome, {user?.id}</h4>\n//       <form onSubmit={handleSubmit}>\n//         <div>\n//           <label>Amount</label>\n//           <input\n//             type=\"number\"\n//             name=\"amount\"\n//             value={newTransaction.amount}\n//             onChange={handleInputChange}\n//             placeholder=\"Enter amount\"\n//             required\n//           />\n//         </div>\n//         <div>\n//           <label>Currency</label>\n//           <select\n//             name=\"currency\"\n//             value={newTransaction.currency}\n//             onChange={handleInputChange}\n//             required\n//           >\n//             <option value=\"USD\">USD</option>\n//             <option value=\"EUR\">EUR</option>\n//             <option value=\"GBP\">GBP</option>\n//             <option value=\"ZAR\">ZAR</option>\n//             {/* Add more currencies as needed */}\n//           </select>\n//         </div>\n//         <div>\n//           <label>Provider</label>\n//           <input\n//             type=\"text\"\n//             name=\"provider\"\n//             value=\"SWIFT\"\n//             readOnly\n//           />\n//         </div>\n//         <div>\n//           <label>SWIFT Code</label>\n//           <input\n//             type=\"text\"\n//             name=\"swiftCode\"\n//             value={newTransaction.swiftCode}\n//             onChange={handleInputChange}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\">Pay Now</button>\n//       </form>\n//       <button onClick={toggleModal}>Close</button>\n//     </div>\n//   </div>\n// )}\n//       </div>\n//     </>\n//   );\n// }\n\n// export default DashboardPage;\n// DashboardPage.js\nimport React from 'react';\n\nfunction DashboardPage() {\n  console.log(\"DashboardPage Loaded\");\n  return <h2>Welcome to the Dashboard!</h2>;\n}\n\nexport default DashboardPage;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAA,EAAG;EACvBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;EACnC,oBAAOH,OAAA;IAAAI,QAAA,EAAI;EAAyB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAC3C;AAACC,EAAA,GAHQR,aAAa;AAKtB,eAAeA,aAAa;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}