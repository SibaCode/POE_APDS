{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useAuth } from '../../../src/AuthContext'; // Assuming you have authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DashboardPage() {\n  _s();\n  const {\n    user\n  } = useAuth(); // Get the current user (customer)\n  const [newTransaction, setNewTransaction] = useState({\n    amount: '',\n    currency: 'USD',\n    // Default value\n    provider: 'SWIFT',\n    // Default value\n    swiftCode: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Handle input changes for the form\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewTransaction(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Prepare transaction data, including the entire object in the \"transaction\" field\n    const transactionData = {\n      transaction: {\n        // Wrap the data in a 'transaction' object\n        amount: parseFloat(newTransaction.amount),\n        // Ensure it's a number\n        currency: newTransaction.currency,\n        provider: newTransaction.provider,\n        status: \"Pending\",\n        // Set default status as \"Pending\"\n        swiftCode: newTransaction.swiftCode,\n        customerId: user.id,\n        \"amount\": 100.00,\n        \"currency\": \"USD\",\n        \"provider\": \"SWIFT\",\n        \"status\": \"Pending\",\n        \"swiftCode\": \"SWIFT123\",\n        \"customerId\": 3 // Use logged-in user ID for the customer\n      }\n    };\n\n    // Send the transaction data to the backend API\n    fetch(\"https://localhost:7150/api/transactions\", {\n      method: \"POST\",\n      // Specify the HTTP method (POST)\n      headers: {\n        \"Content-Type\": \"application/json\" // Set content type to JSON\n      },\n      body: JSON.stringify(transactionData) // Convert the JavaScript object to a JSON string\n    }).then(response => response.json()) // Parse the JSON response\n    .then(data => {\n      if (data.id) {\n        // Transaction created successfully\n        setSuccess('Transaction created successfully!');\n        setError('');\n      } else {\n        // Handle error (e.g. validation error)\n        setSuccess('');\n        setError('Error creating transaction: ' + JSON.stringify(data));\n      }\n    }).catch(error => {\n      // Handle network or server errors\n      console.error(\"Request failed:\", error);\n      setSuccess('');\n      setError('An error occurred while creating the transaction.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Submit Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          value: newTransaction.amount,\n          onChange: handleInputChange,\n          placeholder: \"Enter amount\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Currency\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"currency\",\n          value: newTransaction.currency,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"USD\",\n            children: \"USD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"EUR\",\n            children: \"EUR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"GBP\",\n            children: \"GBP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ZAR\",\n            children: \"ZAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"SWIFT Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"swiftCode\",\n          value: newTransaction.swiftCode,\n          onChange: handleInputChange,\n          placeholder: \"Enter SWIFT Code\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardPage, \"NCtoZkV5YgP5lxR786t20hQC2AA=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useAuth","jsxDEV","_jsxDEV","DashboardPage","_s","user","newTransaction","setNewTransaction","amount","currency","provider","swiftCode","error","setError","success","setSuccess","handleInputChange","e","name","value","target","prev","handleSubmit","preventDefault","transactionData","transaction","parseFloat","status","customerId","id","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","onChange","placeholder","required","_c","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/DashboardPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAuth } from '../../../src/AuthContext'; // Assuming you have authentication context\n\nfunction DashboardPage() {\n  const { user } = useAuth(); // Get the current user (customer)\n  const [newTransaction, setNewTransaction] = useState({\n    amount: '',\n    currency: 'USD',  // Default value\n    provider: 'SWIFT', // Default value\n    swiftCode: '',\n  });\n\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Handle input changes for the form\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setNewTransaction((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();  // Prevent default form submission\n\n    // Prepare transaction data, including the entire object in the \"transaction\" field\n    const transactionData = {\n      transaction: {  // Wrap the data in a 'transaction' object\n        amount: parseFloat(newTransaction.amount),  // Ensure it's a number\n        currency: newTransaction.currency,\n        provider: newTransaction.provider,\n        status: \"Pending\",  // Set default status as \"Pending\"\n        swiftCode: newTransaction.swiftCode,\n        customerId: user.id,\n         \"amount\": 100.00,\n    \"currency\": \"USD\",\n    \"provider\": \"SWIFT\",\n    \"status\": \"Pending\",\n    \"swiftCode\": \"SWIFT123\",\n    \"customerId\": 3// Use logged-in user ID for the customer\n      }\n    };\n\n    // Send the transaction data to the backend API\n    fetch(\"https://localhost:7150/api/transactions\", {\n      method: \"POST\",  // Specify the HTTP method (POST)\n      headers: {\n        \"Content-Type\": \"application/json\",  // Set content type to JSON\n      },\n      body: JSON.stringify(transactionData),  // Convert the JavaScript object to a JSON string\n    })\n      .then((response) => response.json())  // Parse the JSON response\n      .then((data) => {\n        if (data.id) {\n          // Transaction created successfully\n          setSuccess('Transaction created successfully!');\n          setError('');\n        } else {\n          // Handle error (e.g. validation error)\n          setSuccess('');\n          setError('Error creating transaction: ' + JSON.stringify(data));\n        }\n      })\n      .catch((error) => {\n        // Handle network or server errors\n        console.error(\"Request failed:\", error);\n        setSuccess('');\n        setError('An error occurred while creating the transaction.');\n      });\n  };\n\n  return (\n    <div>\n      <h2>Submit Transaction</h2>\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {success && <p style={{ color: 'green' }}>{success}</p>}\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            name=\"amount\"\n            value={newTransaction.amount}\n            onChange={handleInputChange}\n            placeholder=\"Enter amount\"\n            required\n          />\n        </div>\n\n        <div>\n          <label>Currency</label>\n          <select\n            name=\"currency\"\n            value={newTransaction.currency}\n            onChange={handleInputChange}\n            required\n          >\n            <option value=\"USD\">USD</option>\n            <option value=\"EUR\">EUR</option>\n            <option value=\"GBP\">GBP</option>\n            <option value=\"ZAR\">ZAR</option>\n          </select>\n        </div>\n\n        <div>\n          <label>SWIFT Code</label>\n          <input\n            type=\"text\"\n            name=\"swiftCode\"\n            value={newTransaction.swiftCode}\n            onChange={handleInputChange}\n            placeholder=\"Enter SWIFT Code\"\n            required\n          />\n        </div>\n\n        <button type=\"submit\">Submit Transaction</button>\n      </form>\n    </div>\n  );\n}\n\nexport default DashboardPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}