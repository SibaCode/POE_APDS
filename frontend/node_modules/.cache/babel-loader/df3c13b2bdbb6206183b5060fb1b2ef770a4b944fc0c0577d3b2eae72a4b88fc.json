{"ast":null,"code":"var _jsxFileName = \"/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/PaymentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Payments = () => {\n  _s();\n  // State to store payments and form data\n  const [payments, setPayments] = useState([]);\n  const [amount, setAmount] = useState('');\n  const [currency, setCurrency] = useState('');\n  const [customerId, setCustomerId] = useState('');\n  const [provider, setProvider] = useState('');\n  const API_URL = 'http://localhost:7150/api/payments'; // Replace with your backend URL\n\n  // // Fetch all payments when component mounts\n  // useEffect(() => {\n  //     const fetchPayments = async () => {\n  //         try {\n  //             const response = await fetch(API_URL);\n  //             const data = await response.json();\n  //             setPayments(data);\n  //         } catch (error) {\n  //             console.error('Error fetching payments', error);\n  //         }\n  //     };\n\n  //     fetchPayments();\n  // }, []);\n\n  // Handle form submission to create payment\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const paymentData = {\n      amount,\n      currency,\n      customerId,\n      provider,\n      date: new Date() // Assuming date field is required\n    };\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(paymentData)\n      });\n      const newPayment = await response.json();\n      setPayments([...payments, newPayment]); // Add new payment to list\n      // Reset form fields\n      setAmount('');\n      setCurrency('');\n      setCustomerId('');\n      setProvider('');\n    } catch (error) {\n      console.error('Error creating payment', error);\n    }\n  };\n\n  // Handle deleting a payment\n  const handleDelete = async id => {\n    try {\n      await fetch(`${API_URL}/${id}`, {\n        method: 'DELETE'\n      });\n      setPayments(payments.filter(payment => payment.id !== id)); // Remove deleted payment from list\n    } catch (error) {\n      console.error('Error deleting payment', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Currency:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: currency,\n          onChange: e => setCurrency(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Customer ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: customerId,\n          onChange: e => setCustomerId(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Provider:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: provider,\n          onChange: e => setProvider(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: payments.map(payment => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [payment.amount, \" \", payment.currency, \" - \", payment.provider, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(payment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, payment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(Payments, \"WMAqkwMlpwEKcNqKl2wwwq5xj/o=\");\n_c = Payments;\nexport default Payments;\nvar _c;\n$RefreshReg$(_c, \"Payments\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Payments","_s","payments","setPayments","amount","setAmount","currency","setCurrency","customerId","setCustomerId","provider","setProvider","API_URL","handleSubmit","e","preventDefault","paymentData","date","Date","response","fetch","method","headers","body","JSON","stringify","newPayment","json","error","console","handleDelete","id","filter","payment","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","map","onClick","_c","$RefreshReg$"],"sources":["/home/sibahle/Desktop/Rosebank 2025/secure-international-payments/src/components/customer/PaymentsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Payments = () => {\n    // State to store payments and form data\n    const [payments, setPayments] = useState([]);\n    const [amount, setAmount] = useState('');\n    const [currency, setCurrency] = useState('');\n    const [customerId, setCustomerId] = useState('');\n    const [provider, setProvider] = useState('');\n\n    const API_URL = 'http://localhost:7150/api/payments'; // Replace with your backend URL\n\n    // // Fetch all payments when component mounts\n    // useEffect(() => {\n    //     const fetchPayments = async () => {\n    //         try {\n    //             const response = await fetch(API_URL);\n    //             const data = await response.json();\n    //             setPayments(data);\n    //         } catch (error) {\n    //             console.error('Error fetching payments', error);\n    //         }\n    //     };\n\n    //     fetchPayments();\n    // }, []);\n\n    // Handle form submission to create payment\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const paymentData = {\n            amount,\n            currency,\n            customerId,\n            provider,\n            date: new Date(),  // Assuming date field is required\n        };\n\n        try {\n            const response = await fetch(API_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(paymentData),\n            });\n\n            const newPayment = await response.json();\n            setPayments([...payments, newPayment]);  // Add new payment to list\n            // Reset form fields\n            setAmount('');\n            setCurrency('');\n            setCustomerId('');\n            setProvider('');\n        } catch (error) {\n            console.error('Error creating payment', error);\n        }\n    };\n\n    // Handle deleting a payment\n    const handleDelete = async (id) => {\n        try {\n            await fetch(`${API_URL}/${id}`, {\n                method: 'DELETE',\n            });\n            setPayments(payments.filter(payment => payment.id !== id));  // Remove deleted payment from list\n        } catch (error) {\n            console.error('Error deleting payment', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Payments</h1>\n\n            {/* Payment Form */}\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Amount:</label>\n                    <input\n                        type=\"number\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Currency:</label>\n                    <input\n                        type=\"text\"\n                        value={currency}\n                        onChange={(e) => setCurrency(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Customer ID:</label>\n                    <input\n                        type=\"text\"\n                        value={customerId}\n                        onChange={(e) => setCustomerId(e.target.value)}\n                        required\n                    />\n                </div>\n                <div>\n                    <label>Provider:</label>\n                    <input\n                        type=\"text\"\n                        value={provider}\n                        onChange={(e) => setProvider(e.target.value)}\n                        required\n                    />\n                </div>\n                <button type=\"submit\">Add Payment</button>\n            </form>\n\n            {/* Display Payments */}\n            <h2>Payment List</h2>\n            <ul>\n                {payments.map((payment) => (\n                    <li key={payment.id}>\n                        {payment.amount} {payment.currency} - {payment.provider}\n                        <button onClick={() => handleDelete(payment.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Payments;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}